annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.title=FrameAverager
application.vendor=CDP-HPPAV
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/FrameAverager.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.AbsoluteLayout.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/AbsoluteLayout.jar
file.reference.bsh-2.0b4.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/bsh-2.0b4.jar
file.reference.clojure.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/clojure.jar
file.reference.clooj.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/clooj.jar
file.reference.commons-math-2.0.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/commons-math-2.0.jar
file.reference.data.json.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/data.json.jar
file.reference.gproto.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/gproto.jar
file.reference.ij.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/ij.jar
file.reference.ImageFlipper-src=../../Projs/MMJ_/src/plugins/ImageFlipper/src
file.reference.jcommon-1.0.16.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/jcommon-1.0.16.jar
file.reference.jfreechart-1.0.13.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/jfreechart-1.0.13.jar
file.reference.lwm-0.0.2.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/lwm-0.0.2.jar
file.reference.lwm.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/lwm.jar
file.reference.MMAcqEngine.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/MMAcqEngine.jar
file.reference.MMCoreJ.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/MMCoreJ.jar
file.reference.MMJ_.jar=C:\\Micro-Manager-1.4\\plugins\\Micro-Manager\\MMJ_.jar
file.reference.substance.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/substance.jar
file.reference.swing-layout-1.0.4.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/swing-layout-1.0.4.jar
file.reference.swingx-0.9.5.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/swingx-0.9.5.jar
file.reference.trident.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/trident.jar
file.reference.TSFProto.jar=../../../Micro-Manager-1.4/plugins/Micro-Manager/TSFProto.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=true
jar.index=${jnlp.enabled}
javac.classpath=\
    ${libs.swing-layout.classpath}:\
    ${file.reference.AbsoluteLayout.jar}:\
    ${file.reference.bsh-2.0b4.jar}:\
    ${file.reference.clojure.jar}:\
    ${file.reference.clooj.jar}:\
    ${file.reference.commons-math-2.0.jar}:\
    ${file.reference.data.json.jar}:\
    ${file.reference.gproto.jar}:\
    ${file.reference.ij.jar}:\
    ${file.reference.jcommon-1.0.16.jar}:\
    ${file.reference.jfreechart-1.0.13.jar}:\
    ${file.reference.lwm-0.0.2.jar}:\
    ${file.reference.lwm.jar}:\
    ${file.reference.MMAcqEngine.jar}:\
    ${file.reference.MMCoreJ.jar}:\
    ${file.reference.substance.jar}:\
    ${file.reference.swing-layout-1.0.4.jar}:\
    ${file.reference.swingx-0.9.5.jar}:\
    ${file.reference.trident.jar}:\
    ${file.reference.TSFProto.jar}:\
    ${file.reference.MMJ_.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.6
javac.target=1.6
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
main.class=ij.ImageJ
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=true
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.src.dir=src
