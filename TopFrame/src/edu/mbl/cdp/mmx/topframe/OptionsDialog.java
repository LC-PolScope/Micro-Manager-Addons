/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.mbl.cdp.mmx.topframe;

import java.awt.Container;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.lang.reflect.Method;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author GBH
 */
public class OptionsDialog extends javax.swing.JDialog {
	
	private final Options options;

	/**
	 * Creates new form OptionsDialog
	 */
	
	public OptionsDialog(java.awt.Frame parent, Options options, boolean modal) {
		super(parent, modal);
		this.options = options;
		initComponents();
		checkShowMM.setSelected(options.isShowMM());
		checkShowIJ.setSelected(options.isShowIJ());
		checkAddRunScript.setSelected(options.isAddRunButton());
		fieldScriptFile.setText(options.getScriptFile());
		checkExitOnClose.setSelected(options.isExitOnClose());
		this.pack();
		positionDialogRelativeToParent(this,.25,.25);
	}
	
	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    panelShow = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    checkShowMM = new javax.swing.JCheckBox();
    checkShowIJ = new javax.swing.JCheckBox();
    labelOptions = new javax.swing.JLabel();
    panelScript = new javax.swing.JPanel();
    checkAddRunScript = new javax.swing.JCheckBox();
    jLabel4 = new javax.swing.JLabel();
    fieldScriptFile = new javax.swing.JTextField();
    buttonSelectFile = new javax.swing.JButton();
    panelExit = new javax.swing.JPanel();
    checkExitOnClose = new javax.swing.JCheckBox();
    jLabel2 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setModal(true);

    panelShow.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel1.setText("Bring to top on 'Show':");

    checkShowMM.setText("Micro-Manager");
    checkShowMM.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        checkShowMMActionPerformed(evt);
      }
    });

    checkShowIJ.setText("ImageJ");
    checkShowIJ.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        checkShowIJActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout panelShowLayout = new javax.swing.GroupLayout(panelShow);
    panelShow.setLayout(panelShowLayout);
    panelShowLayout.setHorizontalGroup(
      panelShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelShowLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(checkShowIJ)
          .addComponent(jLabel1)
          .addComponent(checkShowMM))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    panelShowLayout.setVerticalGroup(
      panelShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelShowLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(checkShowMM)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(checkShowIJ)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    labelOptions.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    labelOptions.setText("TopFrame Options");

    panelScript.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    checkAddRunScript.setText("Add RunScript button");
    checkAddRunScript.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        checkAddRunScriptActionPerformed(evt);
      }
    });

    jLabel4.setText("Script to run:");

    fieldScriptFile.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        fieldScriptFileActionPerformed(evt);
      }
    });

    buttonSelectFile.setText("...");
    buttonSelectFile.setMargin(new java.awt.Insets(2, 2, 2, 2));
    buttonSelectFile.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonSelectFileActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout panelScriptLayout = new javax.swing.GroupLayout(panelScript);
    panelScript.setLayout(panelScriptLayout);
    panelScriptLayout.setHorizontalGroup(
      panelScriptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelScriptLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelScriptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panelScriptLayout.createSequentialGroup()
            .addComponent(fieldScriptFile)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(buttonSelectFile))
          .addGroup(panelScriptLayout.createSequentialGroup()
            .addGroup(panelScriptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel4)
              .addComponent(checkAddRunScript))
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    panelScriptLayout.setVerticalGroup(
      panelScriptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelScriptLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(checkAddRunScript)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel4)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(panelScriptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(fieldScriptFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(buttonSelectFile))
        .addContainerGap())
    );

    panelExit.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    checkExitOnClose.setText("Exit on Closing TopFrame");
    checkExitOnClose.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        checkExitOnCloseActionPerformed(evt);
      }
    });

    jLabel2.setText("(Requires re-start)");

    javax.swing.GroupLayout panelExitLayout = new javax.swing.GroupLayout(panelExit);
    panelExit.setLayout(panelExitLayout);
    panelExitLayout.setHorizontalGroup(
      panelExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelExitLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panelExitLayout.createSequentialGroup()
            .addGap(21, 21, 21)
            .addComponent(jLabel2))
          .addComponent(checkExitOnClose))
        .addContainerGap(47, Short.MAX_VALUE))
    );
    panelExitLayout.setVerticalGroup(
      panelExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelExitLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(checkExitOnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel2)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(labelOptions)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
            .addComponent(panelShow, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelScript, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelExit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(5, 5, 5)
        .addComponent(labelOptions)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panelShow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panelScript, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panelExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void checkShowMMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkShowMMActionPerformed
    options.setShowMM(checkShowMM.isSelected());
  }//GEN-LAST:event_checkShowMMActionPerformed

  private void checkShowIJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkShowIJActionPerformed
    options.setShowIJ(checkShowIJ.isSelected());
  }//GEN-LAST:event_checkShowIJActionPerformed

  private void checkExitOnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkExitOnCloseActionPerformed
    options.setExitOnClose(checkExitOnClose.isSelected());
  }//GEN-LAST:event_checkExitOnCloseActionPerformed

  private void checkAddRunScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAddRunScriptActionPerformed
    options.setAddRunButton(checkAddRunScript.isSelected());
  }//GEN-LAST:event_checkAddRunScriptActionPerformed

  private void fieldScriptFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldScriptFileActionPerformed
    options.setScriptFile(fieldScriptFile.getText());
  }//GEN-LAST:event_fieldScriptFileActionPerformed

  private void buttonSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectFileActionPerformed
    String dir = System.getProperty("user.dir") + System.getProperty("file.separator");
		String scriptFile = scriptChooser("Script File", dir);
		if(scriptFile!=null) {
			options.setScriptFile(scriptFile);
			fieldScriptFile.setText(scriptFile);
		}
  }//GEN-LAST:event_buttonSelectFileActionPerformed

	  public static String scriptChooser(String msg, String path) {
    String fileSelected = null;
    javax.swing.JFileChooser chooser = new javax.swing.JFileChooser(path);
    java.io.File file = null;
		FileFilter filter = new FileNameExtensionFilter("BeanShell Script (.bsh)", "bsh");
		chooser.addChoosableFileFilter(filter);
		//chooser.setFileFilter(null);
    chooser.setFileHidingEnabled(true);
    chooser.setMultiSelectionEnabled(false);
    chooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
    chooser.setDialogType(javax.swing.JFileChooser.OPEN_DIALOG);
    int state = chooser.showDialog(null, msg);
    if (state == javax.swing.JFileChooser.APPROVE_OPTION) {
      file = chooser.getSelectedFile();
      fileSelected = file.getAbsolutePath();
      //System.out.println(fileSelected);
			return fileSelected;
    } else {
			return null;
		}
    
  }
	/**
	 * @param args the command line arguments
	 */
//	public static void main(String args[]) {
//		/* Set the Nimbus look and feel */
//		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//		 */
//		try {
//			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//				if ("Nimbus".equals(info.getName())) {
//					javax.swing.UIManager.setLookAndFeel(info.getClassName());
//					break;
//				}
//			}
//		} catch (ClassNotFoundException ex) {
//			java.util.logging.Logger.getLogger(OptionsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//		} catch (InstantiationException ex) {
//			java.util.logging.Logger.getLogger(OptionsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//		} catch (IllegalAccessException ex) {
//			java.util.logging.Logger.getLogger(OptionsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
//			java.util.logging.Logger.getLogger(OptionsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//		}
//		//</editor-fold>
//
//		/* Create and display the dialog */
//		java.awt.EventQueue.invokeLater(new Runnable() {
//			public void run() {
//				OptionsDialog dialog = new OptionsDialog(new javax.swing.JFrame(), new Options(), true);
//				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//					@Override
//					public void windowClosing(java.awt.event.WindowEvent e) {
//						//System.exit(0);
//					}
//
//				});
//				dialog.setVisible(true);
//			}
//
//		});
//	}
	
  /**
   * Positions the specified dialog at a position relative to its parent.
   *
   * @param dialog  the dialog to be positioned.
   * @param horizontalPercent  the relative location.
   * @param verticalPercent  the relative location.
   */
  public static void positionDialogRelativeToParent(final Dialog dialog,
                                                    final double horizontalPercent,
                                                    final double verticalPercent) {
      final Dimension d = dialog.getSize();
      final Container parent = dialog.getParent();
      final Dimension p = parent.getSize();

      final int baseX = parent.getX() - d.width;
      final int baseY = parent.getY() - d.height;
      final int w = d.width + p.width;
      final int h = d.height + p.height;
      int x = baseX + (int) (horizontalPercent * w);
      int y = baseY + (int) (verticalPercent * h);

      // make sure the dialog fits completely on the screen...
      final Rectangle s = getMaximumWindowBounds();
      x = Math.min(x, (s.width - d.width));
      x = Math.max(x, 0);
      y = Math.min(y, (s.height - d.height));
      y = Math.max(y, 0);

      dialog.setBounds(x + s.x, y + s.y, d.width, d.height);

  }
  /**
   * Computes the maximum bounds of the current screen device. If this method is called on JDK 1.4, Xinerama-aware
   * results are returned. (See Sun-Bug-ID 4463949 for details).
   *
   * @return the maximum bounds of the current screen.
   */
    public static Rectangle getMaximumWindowBounds ()
    {
      final GraphicsEnvironment localGraphicsEnvironment = GraphicsEnvironment.getLocalGraphicsEnvironment();
      try
      {
        final Method method = GraphicsEnvironment.class.getMethod("getMaximumWindowBounds", (Class[]) null);
        return (Rectangle) method.invoke(localGraphicsEnvironment, (Object[]) null);
      }
      catch(Exception e)
      {
        // ignore ... will fail if this is not a JDK 1.4 ..
      }

      final Dimension s = Toolkit.getDefaultToolkit().getScreenSize();
      return new Rectangle (0, 0, s.width, s.height);
    }


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton buttonSelectFile;
  private javax.swing.JCheckBox checkAddRunScript;
  private javax.swing.JCheckBox checkExitOnClose;
  private javax.swing.JCheckBox checkShowIJ;
  private javax.swing.JCheckBox checkShowMM;
  private javax.swing.JTextField fieldScriptFile;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel labelOptions;
  private javax.swing.JPanel panelExit;
  private javax.swing.JPanel panelScript;
  private javax.swing.JPanel panelShow;
  // End of variables declaration//GEN-END:variables
}
